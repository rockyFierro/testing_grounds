{"ast":null,"code":"var _jsxFileName = \"/Users/home/projects/sanctcite/twentyone/src/Components/Learn_git.jsx\";\nimport React, { Component } from \"react\";\nimport { Example } from \"./CodeExample\";\nexport class LearnGit extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"git\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }\n    }, \"Let's look at creating a new repository in VSCode and adding it to Github.\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Example, {\n      description: \"initialize a repository (your workspace)\",\n      input: \"git init\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Example, {\n      description: \"Choose a feature to work on, stage relavent files (or all of them) and then make commits as you go along.\",\n      input: \"git add * && git commit -m \\\\\\\"write your commit message\\\\\\\" \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/home/projects/sanctcite/twentyone/src/Components/Learn_git.jsx"],"names":["React","Component","Example","LearnGit","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AACtCG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,WAAW,EAAC,0CADd;AAEE,MAAA,KAAK,EAAC,UAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACA,MAAA,WAAW,EAAC,2GADZ;AAEA,MAAA,KAAK,EAAC,+DAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,CAHF,CADF;AAmBD;;AArBqC","sourcesContent":["import React, { Component } from \"react\";\nimport { Example } from \"./CodeExample\";\n\nexport class LearnGit extends Component {\n  render() {\n    return (\n      <div className=\"git\">\n        Let's look at creating a new repository in VSCode and adding it to\n        Github.\n        <ul>\n          <li>\n            <Example\n              description=\"initialize a repository (your workspace)\"\n              input=\"git init\"\n            />\n          </li>\n          <li>\n            <Example\n            description='Choose a feature to work on, stage relavent files (or all of them) and then make commits as you go along.'\n            input='git add * && git commit -m \\\"write your commit message\\\" '/>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}